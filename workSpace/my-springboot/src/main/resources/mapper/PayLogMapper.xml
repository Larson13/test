<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.testfan.myspringboot.dao.PayLogMapper" >
  <resultMap id="BaseResultMap" type="cn.testfan.myspringboot.model.PayLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="REAL" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="discount" property="discount" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, amount, order_type, pay_type, discount, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.testfan.myspringboot.model.PayLog" >
    insert into pay_log (id, order_id, amount, 
      order_type, pay_type, discount, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{amount,jdbcType=REAL}, 
      #{orderType,jdbcType=TINYINT}, #{payType,jdbcType=TINYINT}, #{discount,jdbcType=REAL}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.testfan.myspringboot.model.PayLog" >
    insert into pay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.testfan.myspringboot.model.PayLog" >
    update pay_log
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.testfan.myspringboot.model.PayLog" >
    update pay_log
    set order_id = #{orderId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=REAL},
      order_type = #{orderType,jdbcType=TINYINT},
      pay_type = #{payType,jdbcType=TINYINT},
      discount = #{discount,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>